networks:
  # This is like the physical cable links between the routers, so the idea is that now we have a subnet link for each pair of routers
  link-1-2:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.12.0/24 # subnet reprensenting the internal link between router 1 and 2, emulated physical ethernet link
          gateway: 192.168.12.1
  # Properly defining the management network
  management:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24
          gateway: 10.0.0.1

services:
  # Adding the SDN controller service
  sdn_controller:
    build:
      context: ./sdn_controller
      dockerfile: Dockerfile
    container_name: sdn_controller
    networks:
      management:
        ipv4_address: 10.0.0.2
    ports:
      - "8000:8000"  # Expose the FastAPI port
    volumes:
      - ./shared:/shared  # Mount the same shared directory
    depends_on:
      - router1
      - router2
  
  router1:
    image: ubuntu:20.04
    container_name: router1
    networks:
      link-1-2:
        ipv4_address: 192.168.12.2
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
    ports:
      - "8001:8000"
    volumes:
      - ./shared:/shared
    environment:
      - DEBIAN_FRONTEND=noninteractive
    command: >
      bash -c "
        apt-get update && 
        apt-get install -y --no-install-recommends python3 iproute2 iputils-ping net-tools &&
        echo 'Router 1 configuration complete' &&
        tail -f /dev/null
      "
  router2:
    image: ubuntu:20.04
    container_name: router2
    networks:
      link-1-2:
        ipv4_address: 192.168.12.3
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
    ports:
      - "8002:8000"
    volumes:
      - ./shared:/shared
    environment:
      - DEBIAN_FRONTEND=noninteractive
    command: >
      bash -c "
        apt-get update && 
        apt-get install -y --no-install-recommends python3 iproute2 iputils-ping net-tools &&
        echo 'Router 2 configuration complete' &&
        tail -f /dev/null
      "